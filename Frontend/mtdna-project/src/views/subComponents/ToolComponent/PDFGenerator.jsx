import React from 'react';
import { jsPDF } from "jspdf";
import html2canvas from 'html2canvas';

const PDFGenerator = ({ 
  chartRef, 
  hvr1, 
  hvr2, 
  prediction, 
  probabilities, 
  reportTitle = "Prediction Report", 
  fileName = "Prediction_Report.pdf",
  description = "Using mitochondrial DNA sequences (HVR1 and HVR2), this analysis predicts based on the provided sequence."
}) => {
  
  const downloadPDF = async () => {
    // Create a new PDF document
    const doc = new jsPDF();
    doc.setLineWidth(0.5);
    doc.rect(10, 10, 190, 277); // Drawing a border around the page
  
    // Set the font and color for the logo
    doc.setFontSize(16);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(41, 111, 157); // Blue color for logo
    doc.text("mitoMatch", 20, 20); // Positioning the logo at the top left corner
  
    // Set font for "Prediction Report"
    let yPosition = 35;
    doc.setFontSize(18);
    doc.setFont("times", "bold");
    doc.setTextColor(0, 0, 0);
    doc.text(reportTitle, 20, yPosition);
  
    yPosition += 15;
  
    // Set font and color for description text
    doc.setFontSize(12);
    doc.setFont("times", "normal");
    doc.setTextColor(0, 0, 0); // Black color for description text
    doc.text(description, 20, yPosition, { maxWidth: 170 });
  
    // HVR1 Section
    yPosition += 15;
    doc.setFontSize(11);
    doc.setFont("times", "bold");
    doc.text("HVR1 Sequence:", 20, yPosition);
    doc.setFontSize(12);
    doc.setFont("courier", "normal");
    const hvr1Wrapped = doc.splitTextToSize(hvr1, 170);
    yPosition += 10;
    doc.text(hvr1Wrapped, 20, yPosition);
  
    // HVR2 Section
    yPosition += 35;
    doc.setFontSize(11);
    doc.setFont("times", "bold");
    doc.text("HVR2 Sequence:", 20, yPosition);
    doc.setFontSize(12);
    doc.setFont("courier", "normal");
    const hvr2Wrapped = doc.splitTextToSize(hvr2, 170);
    yPosition += 10;
    doc.text(hvr2Wrapped, 20, yPosition);
  
    // Predicted Result Section
    yPosition += 30;
    doc.setFontSize(12);
    doc.setFont("times", "bold");
    doc.text("Predicted Result: ", 20, yPosition);
    const resultXPosition = 80;
    doc.setFontSize(12);
    doc.setFont("courier", "normal");
    doc.setTextColor(0, 123, 255); // Blue color for result
    doc.text(prediction, resultXPosition, yPosition);
    doc.setTextColor(0, 0, 0); // Reset color to black
  
    // Add the pie chart to the PDF using html2canvas
    if (chartRef.current && probabilities) {
      try {
        // Get the size of the original chart container
        const chartContainer = chartRef.current;
        const containerWidth = chartContainer.offsetWidth;
        const containerHeight = chartContainer.offsetHeight;
        
        // Capture the chart with proper dimensions
        const canvas = await html2canvas(chartContainer, {
          width: containerWidth,
          height: containerHeight,
          scale: 2, // Higher scale for better quality
          logging: false,
          useCORS: true
        });
        
        const chartImgData = canvas.toDataURL('image/png');
        
        // Add the chart image to the PDF
        yPosition += 20;
        doc.setFontSize(12);
        doc.setFont("times", "bold");
        doc.text("Distribution Chart:", 20, yPosition);
        
        yPosition += 10;
        
        // Calculate aspect ratio to prevent stretching
        const imgWidth = 150; // Max width for the chart in the PDF
        const aspectRatio = canvas.height / canvas.width;
        const imgHeight = imgWidth * aspectRatio; // Maintain aspect ratio
        
        // Center the chart horizontally
        const leftMargin = (210 - imgWidth) / 2; // 210 is A4 width in mm
        
        // Add the chart image with proper aspect ratio
        doc.addImage(chartImgData, 'PNG', leftMargin, yPosition, imgWidth, imgHeight);
        
        yPosition += imgHeight + 10; // Move position below the chart
      } catch (error) {
        console.error("Error capturing chart:", error);
      }
    }
  
    // Footer Section
    yPosition += 25;
    doc.setFontSize(10);
    doc.setFont("times", "italic");
    doc.setTextColor(150); // Gray color for footer
    doc.text("Generated by mitoMatch - Powered by jsPDF", 20, yPosition);
  
    // Save the PDF
    doc.save(fileName);
  };

  return (
    <button onClick={downloadPDF} className="download-button">
      Download Report
    </button>
  );
};

export default PDFGenerator;